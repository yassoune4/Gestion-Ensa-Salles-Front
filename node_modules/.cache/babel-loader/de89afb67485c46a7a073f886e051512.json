{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport FuseUtils from '@fuse/FuseUtils';\n\nvar jwtService =\n/*#__PURE__*/\nfunction (_FuseUtils$EventEmitt) {\n  _inherits(jwtService, _FuseUtils$EventEmitt);\n\n  function jwtService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, jwtService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(jwtService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setInterceptors = function () {\n      axios.interceptors.response.use(function (response) {\n        return response;\n      }, function (err) {\n        return new Promise(function (resolve, reject) {\n          if (err.response.status === 401 && err.config && !err.config.__isRetryRequest) {\n            // if you ever get an unauthorized response, logout the user\n            _this.emit('onAutoLogout', 'Invalid access_token');\n\n            _this.setSession(null);\n          }\n\n          throw err;\n        });\n      });\n    };\n\n    _this.handleAuthentication = function () {\n      var access_token = _this.getAccessToken();\n\n      if (!access_token) {\n        return;\n      }\n\n      if (_this.isAuthTokenValid(access_token)) {\n        _this.setSession(access_token);\n\n        _this.emit('onAutoLogin', true);\n      } else {\n        _this.setSession(null);\n\n        _this.emit('onAutoLogout', 'access_token expired');\n      }\n    };\n\n    _this.createUser = function (data) {\n      return new Promise(function (resolve, reject) {\n        console.log(\"Im inside create user: the promise data: \", data); // axios.post('/api/auth/register', data)\n\n        axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/register\"), {\n          email: data.email,\n          username: data.username,\n          password: data.password,\n          role: data.role\n        }).then(function (response) {\n          if (response.data) {\n            console.log(\"I'm inside axios post sign up: response data: \", response.data); //this.setSession(response.data.token);\n            //resolve(response.data.user);\n          } else {\n            console.log(response);\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.signInWithEmailAndPassword = function (email, password) {\n      console.log(email);\n      console.log(password);\n      var data = JSON.stringify({\n        password: password,\n        username: email\n      });\n      return new Promise(function (resolve, reject) {\n        // axios.get('/api/auth', {\n        axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/authenticate\"), data, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          console.log('RESPONSE DATA: ', response.data);\n\n          if (response.data) {\n            _this.setSession(response.data.token);\n\n            resolve(response.data);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.signInWithToken = function () {\n      return new Promise(function (resolve, reject) {\n        // axios.get('/api/auth/access-token', {\n        axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"/signinWithJWT\"), {\n          data: {\n            access_token: _this.getAccessToken()\n          }\n        }).then(function (response) {\n          if (response.data.user) {\n            console.log(response.data);\n\n            _this.setSession(response.data.token);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        });\n      });\n    };\n\n    _this.updateUserData = function (user) {\n      return axios.post('/api/auth/user/update', {\n        user: user\n      });\n    };\n\n    _this.setSession = function (access_token) {\n      if (access_token) {\n        localStorage.setItem('jwt_access_token', access_token);\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n      } else {\n        localStorage.removeItem('jwt_access_token');\n        delete axios.defaults.headers.common['Authorization'];\n      }\n    };\n\n    _this.logout = function () {\n      _this.setSession(null);\n    };\n\n    _this.isAuthTokenValid = function (access_token) {\n      if (!access_token) {\n        return false;\n      }\n\n      var decoded = jwtDecode(access_token);\n      var currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    _this.getAccessToken = function () {\n      return window.localStorage.getItem('jwt_access_token');\n    };\n\n    return _this;\n  }\n\n  _createClass(jwtService, [{\n    key: \"init\",\n    value: function init() {\n      this.setInterceptors();\n      this.handleAuthentication();\n    }\n  }]);\n\n  return jwtService;\n}(FuseUtils.EventEmitter);\n\nvar instance = new jwtService();\nexport default instance;","map":{"version":3,"sources":["C:\\Users\\hp folio\\Documents\\ProjetLibre\\Front\\gestion-salle-front\\src\\app\\services\\jwtService\\jwtService.js"],"names":["axios","jwtDecode","FuseUtils","jwtService","setInterceptors","interceptors","response","use","err","Promise","resolve","reject","status","config","__isRetryRequest","emit","setSession","handleAuthentication","access_token","getAccessToken","isAuthTokenValid","createUser","data","console","log","post","process","env","REACT_APP_API_URL","email","username","password","role","then","error","signInWithEmailAndPassword","JSON","stringify","headers","token","signInWithToken","get","user","updateUserData","localStorage","setItem","defaults","common","removeItem","logout","decoded","currentTime","Date","now","exp","warn","window","getItem","EventEmitter","instance"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport FuseUtils from '@fuse/FuseUtils';\n\nclass jwtService extends FuseUtils.EventEmitter {\n\n    init()\n    {\n        this.setInterceptors();\n        this.handleAuthentication();\n    }\n\n    setInterceptors = () => {\n        axios.interceptors.response.use(response => {\n            return response;\n        }, err => {\n            return new Promise((resolve, reject) => {\n                if ( err.response.status === 401 && err.config && !err.config.__isRetryRequest )\n                {\n                    // if you ever get an unauthorized response, logout the user\n                    this.emit('onAutoLogout', 'Invalid access_token');\n                    this.setSession(null);\n                }\n                throw err;\n            });\n        });\n    };\n\n    handleAuthentication = () => {\n\n        let access_token = this.getAccessToken();\n\n        if ( !access_token )\n        {\n            return;\n        }\n\n        if ( this.isAuthTokenValid(access_token) )\n        {\n            this.setSession(access_token);\n            this.emit('onAutoLogin', true);\n        }\n        else\n        {\n            this.setSession(null);\n            this.emit('onAutoLogout', 'access_token expired');\n        }\n    };\n\n    createUser = (data) => {\n        return new Promise((resolve, reject) => {\n            console.log(\"Im inside create user: the promise data: \",data);\n            // axios.post('/api/auth/register', data)\n            axios.post(`${process.env.REACT_APP_API_URL}/register`, {\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                role: data.role\n            })\n                .then(response => {\n                    if ( response.data )\n                    {\n                        console.log(\"I'm inside axios post sign up: response data: \", response.data);\n                        //this.setSession(response.data.token);\n                        //resolve(response.data.user);\n                    }\n                    else\n                    {\n                        console.log(response);\n                        reject(response.data.error);\n                    }\n                });\n\n        });\n    };\n\n    signInWithEmailAndPassword = (email, password) => {\n        console.log(email);\n        console.log(password);\n        let data = JSON.stringify({\n            password: password,\n            username: email\n        })\n        return new Promise((resolve, reject) => {\n            // axios.get('/api/auth', {\n               axios.post(`${process.env.REACT_APP_API_URL}/authenticate`,data,{\n                 headers: {\n                       'Content-Type': 'application/json'\n                }\n            }).then(response => {\n                console.log('RESPONSE DATA: ', response.data);\n                if ( response.data )\n                {\n                    this.setSession(response.data.token);\n                    resolve(response.data);\n                }\n                else\n                {\n                    reject(response.data.error);\n                }\n            });\n        });\n    };\n\n    signInWithToken = () => {\n        return new Promise((resolve, reject) => {\n            // axios.get('/api/auth/access-token', {\n               axios.get(`${process.env.REACT_APP_API_URL}/signinWithJWT`,{\n                data: {\n                    access_token: this.getAccessToken()\n                }\n            })\n                .then(response => {\n                    if ( response.data.user )\n                    {   console.log(response.data);\n                        this.setSession(response.data.token);\n                        resolve(response.data.user);\n                    }\n                    else\n                    {\n                        reject(response.data.error);\n                    }\n                });\n        });\n    };\n\n    updateUserData = (user) => {\n        return axios.post('/api/auth/user/update', {\n            user: user\n        });\n    };\n\n    setSession = access_token => {\n        if ( access_token )\n        {\n            localStorage.setItem('jwt_access_token', access_token);\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        }\n        else\n        {\n            localStorage.removeItem('jwt_access_token');\n            delete axios.defaults.headers.common['Authorization'];\n        }\n    };\n\n    logout = () => {\n        this.setSession(null);\n    };\n\n    isAuthTokenValid = access_token => {\n        if ( !access_token )\n        {\n            return false;\n        }\n        const decoded = jwtDecode(access_token);\n        const currentTime = Date.now() / 1000;\n        if ( decoded.exp < currentTime )\n        {\n            console.warn('access token expired');\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    };\n\n    getAccessToken = () => {\n        return window.localStorage.getItem('jwt_access_token');\n    };\n}\n\nconst instance = new jwtService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}