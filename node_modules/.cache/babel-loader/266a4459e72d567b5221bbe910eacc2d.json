{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport history from '@history';\nimport { setDefaultSettings, setInitialSettings } from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport firebase from 'firebase/app';\nimport firebaseService from 'app/services/firebaseService';\nimport auth0Service from 'app/services/auth0Service';\nimport jwtService from 'app/services/jwtService';\nimport authRoles from \"../../authRoles\";\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n/**\n * Set user data from Auth0 token data\n */\n\nexport function setUserDataAuth0(tokenData) {\n  var user = {\n    role: ['admin'],\n    from: 'auth0',\n    data: {\n      displayName: tokenData.username,\n      photoURL: tokenData.picture,\n      email: tokenData.email,\n      settings: tokenData.user_metadata && tokenData.user_metadata.settings ? tokenData.user_metadata.settings : {},\n      shortcuts: tokenData.user_metadata && tokenData.user_metadata.shortcuts ? tokenData.user_metadata.shortcuts : []\n    }\n  };\n  return setUserData(user);\n}\n/**\n * Set user data from Firebase data\n */\n\nexport function setUserDataFirebase(user, authUser) {\n  if (user && user.data && user.data.settings && user.data.settings.theme && user.data.settings.layout && user.data.settings.layout.style) {\n    // Set user data but do not update\n    return setUserData(user);\n  } else {\n    // Create missing user settings\n    return createUserSettingsFirebase(authUser);\n  }\n}\n/**\n * Create User Settings with Firebase data\n */\n\nexport function createUserSettingsFirebase(authUser) {\n  return function (dispatch, getState) {\n    var guestUser = getState().auth.user;\n    var fuseDefaultSettings = getState().fuse.settings.defaults;\n    var currentUser = firebase.auth().currentUser;\n    /**\n     * Merge with current Settings\n     */\n\n    var user = _.merge({}, guestUser, {\n      uid: authUser.uid,\n      from: 'firebase',\n      role: [\"admin\"],\n      data: {\n        displayName: authUser.displayName,\n        email: authUser.email,\n        settings: _objectSpread({}, fuseDefaultSettings)\n      }\n    });\n\n    currentUser.updateProfile(user.data);\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Set User Data\n */\n\nexport function setUserData(user) {\n  var role;\n\n  switch (user.role) {\n    case 'ETUDIANT':\n      {\n        role = authRoles.user;\n        console.log('ROLE IS: ', role);\n        break;\n      }\n\n    case 'PROFESSEUR':\n      {\n        role = authRoles.staff;\n        break;\n      }\n\n    case 'SCOLARITE':\n      {\n        role = authRoles.admin;\n        break;\n      }\n  }\n\n  var userParam = {\n    uuid: user.id,\n    from: 'custom-db',\n    password: undefined,\n    role: role,\n    data: {\n      'displayName': user.username,\n      'photoURL': 'assets/images/avatars/Abbott.jpg',\n      'email': user.email,\n      settings: {\n        layout: {\n          style: 'layout1',\n          config: {\n            scroll: 'content',\n            navbar: {\n              display: true,\n              folded: true,\n              position: 'left'\n            },\n            toolbar: {\n              display: true,\n              style: 'fixed',\n              position: 'below'\n            },\n            footer: {\n              display: true,\n              style: 'fixed',\n              position: 'below'\n            },\n            mode: 'fullwidth'\n          }\n        },\n        customScrollbars: true,\n        theme: {\n          main: 'defaultDark',\n          navbar: 'defaultDark',\n          toolbar: 'defaultDark',\n          footer: 'defaultDark'\n        }\n      },\n      shortcuts: ['calendar', 'mail', 'contacts']\n    }\n  };\n  return function (dispatch) {\n    /*\n    Set User Settings\n     */\n    dispatch(setDefaultSettings(userParam.data.settings));\n    /*\n    Set User Data\n     */\n\n    dispatch({\n      type: SET_USER_DATA,\n      payload: userParam\n    });\n  };\n}\n/**\n * Update User Settings\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Update User Shortcuts\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    var newUser = _objectSpread({}, user, {\n      data: _objectSpread({}, user.data, {\n        shortcuts: shortcuts\n      })\n    });\n\n    updateUserData(newUser);\n    return dispatch(setUserData(newUser));\n  };\n}\n/**\n * Remove User Data\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\n * Logout\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    if (!user.role || user.role.length === 0) // is guest\n      {\n        return null;\n      }\n\n    history.push({\n      pathname: '/'\n    });\n\n    switch (user.from) {\n      case 'firebase':\n        {\n          firebaseService.signOut();\n          break;\n        }\n\n      case 'auth0':\n        {\n          auth0Service.logout();\n          break;\n        }\n\n      default:\n        {\n          jwtService.logout();\n        }\n    }\n\n    dispatch(setInitialSettings());\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\n * Update User Data\n */\n\nfunction updateUserData(user) {\n  if (!user.role || user.role.length === 0) // is guest\n    {\n      return;\n    }\n\n  switch (user.from) {\n    case 'firebase':\n      {\n        firebaseService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to firebase\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    case 'auth0':\n      {\n        auth0Service.updateUserData({\n          settings: user.data.settings,\n          shortcuts: user.data.shortcuts\n        }).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved to auth0\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    default:\n      {\n        jwtService.updateUserData(user).then(function () {\n          store.dispatch(Actions.showMessage({\n            message: \"User data saved with api\"\n          }));\n        }).catch(function (error) {\n          store.dispatch(Actions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n  }\n}","map":{"version":3,"sources":["C:\\Users\\hp folio\\Documents\\ProjetLibre\\Front\\gestion-salle-front\\src\\app\\auth\\store\\actions\\user.actions.js"],"names":["history","setDefaultSettings","setInitialSettings","_","store","Actions","firebase","firebaseService","auth0Service","jwtService","authRoles","SET_USER_DATA","REMOVE_USER_DATA","USER_LOGGED_OUT","setUserDataAuth0","tokenData","user","role","from","data","displayName","username","photoURL","picture","email","settings","user_metadata","shortcuts","setUserData","setUserDataFirebase","authUser","theme","layout","style","createUserSettingsFirebase","dispatch","getState","guestUser","auth","fuseDefaultSettings","fuse","defaults","currentUser","merge","uid","updateProfile","updateUserData","console","log","staff","admin","userParam","uuid","id","password","undefined","config","scroll","navbar","display","folded","position","toolbar","footer","mode","customScrollbars","main","type","payload","updateUserSettings","oldUser","updateUserShortcuts","newUser","removeUserData","logoutUser","length","push","pathname","signOut","logout","then","showMessage","message","catch","error"],"mappings":"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","sourcesContent":["import history from '@history';\nimport {setDefaultSettings, setInitialSettings} from 'app/store/actions/fuse';\nimport _ from '@lodash';\nimport store from 'app/store';\nimport * as Actions from 'app/store/actions';\nimport firebase from 'firebase/app';\nimport firebaseService from 'app/services/firebaseService';\nimport auth0Service from 'app/services/auth0Service';\nimport jwtService from 'app/services/jwtService';\nimport authRoles from \"../../authRoles\";\n\nexport const SET_USER_DATA = '[USER] SET DATA';\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\n\n/**\n * Set user data from Auth0 token data\n */\nexport function setUserDataAuth0(tokenData)\n{\n    const user = {\n        role: ['admin'],\n        from: 'auth0',\n        data: {\n            displayName: tokenData.username,\n            photoURL   : tokenData.picture,\n            email      : tokenData.email,\n            settings   : (tokenData.user_metadata && tokenData.user_metadata.settings) ? tokenData.user_metadata.settings : {},\n            shortcuts  : (tokenData.user_metadata && tokenData.user_metadata.shortcuts) ? tokenData.user_metadata.shortcuts : []\n        }\n    };\n\n    return setUserData(user);\n}\n\n/**\n * Set user data from Firebase data\n */\nexport function setUserDataFirebase(user, authUser)\n{\n    if ( user && user.data &&\n        user.data.settings &&\n        user.data.settings.theme &&\n        user.data.settings.layout &&\n        user.data.settings.layout.style )\n    {\n        // Set user data but do not update\n        return setUserData(user);\n    }\n    else\n    {\n        // Create missing user settings\n        return createUserSettingsFirebase(authUser);\n    }\n}\n\n/**\n * Create User Settings with Firebase data\n */\nexport function createUserSettingsFirebase(authUser)\n{\n    return (dispatch, getState) => {\n        const guestUser = getState().auth.user;\n        const fuseDefaultSettings = getState().fuse.settings.defaults;\n        const currentUser = firebase.auth().currentUser;\n\n        /**\n         * Merge with current Settings\n         */\n        const user = _.merge({}, guestUser,\n            {\n                uid : authUser.uid,\n                from: 'firebase',\n                role: [\"admin\"],\n                data: {\n                    displayName: authUser.displayName,\n                    email      : authUser.email,\n                    settings   : {...fuseDefaultSettings}\n                }\n            }\n        );\n        currentUser.updateProfile(user.data);\n\n        updateUserData(user);\n        return dispatch(setUserData(user));\n    }\n}\n\n/**\n * Set User Data\n */\nexport function setUserData(user)\n{\n\n    let role;\n    switch(user.role){\n        case 'ETUDIANT': {\n            role = authRoles.user;\n            console.log('ROLE IS: ', role);\n            break;\n        }\n        case 'PROFESSEUR':{\n            role = authRoles.staff;\n            break;\n        }\n        case 'SCOLARITE': {\n            role = authRoles.admin;\n            break;\n        }\n    }\n\n    const userParam =\n        {\n            uuid    : user.id,\n            from    : 'custom-db',\n            password: undefined,\n            role    : role,\n            data    : {\n                'displayName': user.username,\n                'photoURL'   : 'assets/images/avatars/Abbott.jpg',\n                'email'      : user.email,\n                settings     : {\n                    layout          : {\n                        style : 'layout1',\n                        config: {\n                            scroll : 'content',\n                            navbar : {\n                                display : true,\n                                folded  : true,\n                                position: 'left'\n                            },\n                            toolbar: {\n                                display : true,\n                                style   : 'fixed',\n                                position: 'below'\n                            },\n                            footer : {\n                                display : true,\n                                style   : 'fixed',\n                                position: 'below'\n                            },\n                            mode   : 'fullwidth'\n                        }\n                    },\n                    customScrollbars: true,\n                    theme           : {\n                        main   : 'defaultDark',\n                        navbar : 'defaultDark',\n                        toolbar: 'defaultDark',\n                        footer : 'defaultDark'\n                    }\n                },\n                shortcuts    : [\n                    'calendar',\n                    'mail',\n                    'contacts'\n                ]\n            }\n        }\n    return (dispatch) => {\n\n\n\n        /*\n        Set User Settings\n         */\n        dispatch(setDefaultSettings(userParam.data.settings));\n\n        /*\n        Set User Data\n         */\n        dispatch({\n            type   : SET_USER_DATA,\n            payload: userParam\n        })\n    }\n}\n\n/**\n * Update User Settings\n */\nexport function updateUserSettings(settings)\n{\n    return (dispatch, getState) => {\n        const oldUser = getState().auth.user;\n        const user = _.merge({}, oldUser, {data: {settings}});\n\n        updateUserData(user);\n\n        return dispatch(setUserData(user));\n    }\n}\n\n/**\n * Update User Shortcuts\n */\nexport function updateUserShortcuts(shortcuts)\n{\n    return (dispatch, getState) => {\n        const user = getState().auth.user;\n        const newUser = {\n            ...user,\n            data: {\n                ...user.data,\n                shortcuts\n            }\n        };\n\n        updateUserData(newUser);\n\n        return dispatch(setUserData(newUser));\n    }\n}\n\n/**\n * Remove User Data\n */\nexport function removeUserData()\n{\n    return {\n        type: REMOVE_USER_DATA\n    }\n}\n\n/**\n * Logout\n */\nexport function logoutUser()\n{\n\n    return (dispatch, getState) => {\n\n        const user = getState().auth.user;\n\n        if ( !user.role || user.role.length === 0 )// is guest\n        {\n            return null;\n        }\n\n        history.push({\n            pathname: '/'\n        });\n\n        switch ( user.from )\n        {\n            case 'firebase':\n            {\n                firebaseService.signOut();\n                break;\n            }\n            case 'auth0':\n            {\n                auth0Service.logout();\n                break;\n            }\n            default:\n            {\n                jwtService.logout();\n            }\n        }\n\n        dispatch(setInitialSettings());\n\n        dispatch({\n            type: USER_LOGGED_OUT\n        })\n    }\n}\n\n/**\n * Update User Data\n */\nfunction updateUserData(user)\n{\n    if ( !user.role || user.role.length === 0 )// is guest\n    {\n        return;\n    }\n\n    switch ( user.from )\n    {\n        case 'firebase':\n        {\n            firebaseService.updateUserData(user)\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved to firebase\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n        case 'auth0':\n        {\n            auth0Service.updateUserData({\n                settings : user.data.settings,\n                shortcuts: user.data.shortcuts\n            })\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved to auth0\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n        default:\n        {\n            jwtService.updateUserData(user)\n                .then(() => {\n                    store.dispatch(Actions.showMessage({message: \"User data saved with api\"}));\n                })\n                .catch(error => {\n                    store.dispatch(Actions.showMessage({message: error.message}));\n                });\n            break;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}