{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Auth0Lock from 'auth0-lock';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { AUTH_CONFIG } from './auth0ServiceConfig';\n\nvar auth0Service =\n/*#__PURE__*/\nfunction () {\n  function auth0Service() {\n    var _this = this;\n\n    _classCallCheck(this, auth0Service);\n\n    this.sdk = {\n      auth0Manage: null\n    };\n\n    this.login = function () {\n      if (!_this.lock) {\n        return false;\n      } // Call the show method to display the widget.\n\n\n      _this.lock.show();\n    };\n\n    this.register = function () {\n      if (!_this.lock) {\n        return false;\n      }\n\n      _this.lock.show({\n        initialScreen: 'signUp'\n      });\n    };\n\n    this.handleAuthentication = function () {\n      if (!_this.lock) {\n        return false;\n      } // Add a callback for Lock's `authenticated` event\n\n\n      _this.lock.on('authenticated', _this.setSession); // Add a callback for Lock's `authorization_error` event\n\n\n      _this.lock.on('authorization_error', function (err) {\n        console.warn(\"Error: \".concat(err.error, \". Check the console for further details.\"));\n      });\n    };\n\n    this.onAuthenticated = function (callback) {\n      if (!_this.lock) {\n        return false;\n      }\n\n      _this.lock.on('authenticated', callback);\n    };\n\n    this.setSession = function (authResult) {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        // Set the time that the access token will expire at\n        var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('expires_at', expiresAt);\n      }\n    };\n\n    this.logout = function () {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      localStorage.removeItem('auth0.ssodata');\n    };\n\n    this.isAuthenticated = function () {\n      if (!_this.lock) {\n        return false;\n      } // Check whether the current time is past the\n      // access token's expiry time\n\n\n      var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      var isNotExpired = new Date().getTime() < expiresAt;\n\n      if (isNotExpired) {\n        return true;\n      } else {\n        _this.logout();\n\n        return false;\n      }\n    };\n\n    this.getUserData = function () {\n      return new Promise(function (resolve, reject) {\n        var tokenData = _this.getTokenData();\n\n        var userId = tokenData.sub;\n        var auth0UserUrl = 'https://' + AUTH_CONFIG.domain + '/api/v2/users/' + userId;\n        axios.get(auth0UserUrl, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + _this.getAccessToken()\n          }\n        }).then(function (response) {\n          resolve(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.warn('Cannot retrieve user data', error);\n          reject(error);\n        });\n      });\n    };\n\n    this.updateUserData = function (user_metadata) {\n      var tokenData = _this.getTokenData();\n\n      var userId = tokenData.sub;\n      var auth0UserUrl = 'https://' + AUTH_CONFIG.domain + '/api/v2/users/' + userId;\n      var dataObj = JSON.stringify({\n        user_metadata: user_metadata\n      });\n      return axios.patch(auth0UserUrl, dataObj, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + _this.getAccessToken()\n        }\n      });\n    };\n\n    this.getAccessToken = function () {\n      return localStorage.getItem('access_token');\n    };\n\n    this.getIdToken = function () {\n      return window.localStorage.getItem('id_token');\n    };\n\n    this.getTokenData = function () {\n      var token = _this.getIdToken();\n\n      var decoded = jwtDecode(token);\n\n      if (!decoded) {\n        return null;\n      }\n\n      return decoded;\n    };\n  }\n\n  _createClass(auth0Service, [{\n    key: \"init\",\n    value: function init() {\n      if (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js\");\n        }\n\n        return;\n      }\n\n      this.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n        autoclose: true,\n        socialButtonStyle: \"big\",\n        auth: {\n          // redirect: false,\n          redirectUrl: AUTH_CONFIG.callbackUrl,\n          responseType: 'token id_token',\n          audience: \"https://\".concat(AUTH_CONFIG.domain, \"/api/v2/\"),\n          params: {\n            scope: 'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n          }\n        }\n      });\n      this.handleAuthentication();\n    }\n  }]);\n\n  return auth0Service;\n}();\n\nvar instance = new auth0Service();\nexport default instance;","map":{"version":3,"sources":["C:\\Users\\hp folio\\Documents\\ProjetLibre\\Front\\gestion-salle-front\\src\\app\\services\\auth0Service\\auth0Service.js"],"names":["Auth0Lock","jwtDecode","axios","AUTH_CONFIG","auth0Service","sdk","auth0Manage","login","lock","show","register","initialScreen","handleAuthentication","on","setSession","err","console","warn","error","onAuthenticated","callback","authResult","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem","isNotExpired","getUserData","Promise","resolve","reject","tokenData","getTokenData","userId","sub","auth0UserUrl","domain","get","headers","getAccessToken","then","response","data","catch","updateUserData","user_metadata","dataObj","patch","getIdToken","window","token","decoded","Object","entries","length","constructor","process","env","NODE_ENV","clientId","autoclose","socialButtonStyle","auth","redirectUrl","callbackUrl","responseType","audience","params","scope","instance"],"mappings":"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","sourcesContent":["import Auth0Lock from 'auth0-lock';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport {AUTH_CONFIG} from './auth0ServiceConfig';\n\nclass auth0Service {\n    sdk = {auth0Manage: null};\n\n    init()\n    {\n        if ( Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object )\n        {\n            if ( process.env.NODE_ENV === 'development' )\n            {\n                console.warn(\"Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js\");\n            }\n            return;\n        }\n\n        this.lock = new Auth0Lock(\n            AUTH_CONFIG.clientId,\n            AUTH_CONFIG.domain,\n            {\n                autoclose        : true,\n                socialButtonStyle: \"big\",\n                auth             : {\n                    // redirect: false,\n                    redirectUrl : AUTH_CONFIG.callbackUrl,\n                    responseType: 'token id_token',\n                    audience    : `https://${AUTH_CONFIG.domain}/api/v2/`,\n                    params      : {\n                        scope: 'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n                    }\n                }\n            }\n        );\n        this.handleAuthentication();\n    }\n\n    login = () => {\n        if ( !this.lock )\n        {\n            return false;\n        }\n        // Call the show method to display the widget.\n        this.lock.show();\n    };\n\n    register = () => {\n        if ( !this.lock )\n        {\n            return false;\n        }\n\n        this.lock.show({\n            initialScreen: 'signUp'\n        });\n    };\n\n    handleAuthentication = () => {\n        if ( !this.lock )\n        {\n            return false;\n        }\n\n        // Add a callback for Lock's `authenticated` event\n        this.lock.on('authenticated', this.setSession);\n        // Add a callback for Lock's `authorization_error` event\n        this.lock.on('authorization_error', (err) => {\n            console.warn(`Error: ${err.error}. Check the console for further details.`);\n        });\n    };\n\n    onAuthenticated = (callback) => {\n        if ( !this.lock )\n        {\n            return false;\n        }\n        this.lock.on('authenticated', callback);\n    };\n\n    setSession = (authResult) => {\n\n        if ( authResult && authResult.accessToken && authResult.idToken )\n        {\n            // Set the time that the access token will expire at\n            let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n            localStorage.setItem('access_token', authResult.accessToken);\n            localStorage.setItem('id_token', authResult.idToken);\n            localStorage.setItem('expires_at', expiresAt);\n        }\n    };\n\n    logout = () => {\n        // Clear access token and ID token from local storage\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('id_token');\n        localStorage.removeItem('expires_at');\n        localStorage.removeItem('auth0.ssodata');\n    };\n\n    isAuthenticated = () => {\n        if ( !this.lock )\n        {\n            return false;\n        }\n        // Check whether the current time is past the\n        // access token's expiry time\n        let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n        const isNotExpired = new Date().getTime() < expiresAt;\n        if ( isNotExpired )\n        {\n            return true;\n        }\n        else\n        {\n            this.logout();\n            return false;\n        }\n    };\n\n    getUserData = () => {\n        return new Promise((resolve, reject) => {\n\n            const tokenData = this.getTokenData();\n            const {sub: userId} = tokenData;\n\n            const auth0UserUrl = 'https://' + AUTH_CONFIG.domain + '/api/v2/users/' + userId;\n\n            axios.get(auth0UserUrl, {\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'Authorization': 'Bearer ' + this.getAccessToken()\n                }\n            }).then(response => {\n                resolve(response.data);\n            }).catch(error => {\n                // handle error\n                console.warn('Cannot retrieve user data', error);\n                reject(error);\n            });\n        });\n    };\n\n    updateUserData = (user_metadata) => {\n        const tokenData = this.getTokenData();\n        const {sub: userId} = tokenData;\n\n        const auth0UserUrl = 'https://' + AUTH_CONFIG.domain + '/api/v2/users/' + userId;\n        const dataObj = JSON.stringify({user_metadata});\n\n        return axios.patch(auth0UserUrl, dataObj, {\n            headers: {\n                'Content-Type' : 'application/json',\n                'Authorization': 'Bearer ' + this.getAccessToken()\n            }\n        });\n    };\n\n    getAccessToken = () => {\n        return localStorage.getItem('access_token');\n    };\n\n    getIdToken = () => {\n        return window.localStorage.getItem('id_token');\n    };\n\n    getTokenData = () => {\n        const token = this.getIdToken();\n        const decoded = jwtDecode(token);\n        if ( !decoded )\n        {\n            return null;\n        }\n        return decoded;\n    }\n}\n\nconst instance = new auth0Service();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}