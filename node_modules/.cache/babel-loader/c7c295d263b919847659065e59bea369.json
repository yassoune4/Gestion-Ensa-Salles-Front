{"ast":null,"code":"import axios from 'axios';\nimport { FuseUtils } from '@fuse';\nimport { showMessage } from 'app/store/actions/fuse';\nimport { useSelector } from \"react-redux\";\nexport var GET_SALLE = '[E-COMMERCE APP] GET_SALLE';\nexport var SAVE_PRODUCT = '[E-COMMERCE APP] SAVE PRODUCT';\nexport var SAVE_EVENT = '[E-COMMERCE APP] SAVE_EVENT';\nexport function getProduct2(params) {\n  console.log('GET PRODUCT PARAMS: ', params);\n  var request = axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"/user/\").concat(params.userId, \"/category\"));\n  return function (dispatch) {\n    return request.then(function (response) {\n      var data = {\n        id: response.data._id,\n        response: ''\n      };\n      return dispatch({\n        type: GET_SALLE,\n        payload: data\n      });\n    });\n  };\n}\nexport function saveCategory2(data, user) {\n  console.log('SAVE CATEGORY DATA: ', data);\n  console.log('SAVE PRODUCT DATA USER: ', user);\n  var start = data.startdate + 'T' + data.starttime + 'Z';\n  var end = data.enddate + 'T' + data.endtime + 'Z';\n  console.log('START: ', start);\n  console.log('END: ', end); //const request = axios.post('/api/create-ticket-app/ticket/save', data);\n\n  var request = axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/evenements/evenement/new\"), {\n    name: data.name,\n    start: start,\n    end: end,\n    salle: {\n      id: data.salle\n    },\n    user: {\n      id: user.uuid\n    }\n  });\n  /*\n    const request = axios.post(`${process.env.REACT_APP_API_URL}/salles/salle/new`\n      ,{\n      name: data.name,\n      positions: data.positions,\n      computers: data.computers,\n      board: data.board,\n      conditioning: data.conditioning,\n      speakers: data.speakers,\n      projector: data.projector,\n      network : data.network,\n      department: {\n          id: data.department\n      }\n      });\n  */\n\n  return function (dispatch) {\n    return request.then(function (response) {\n      dispatch(showMessage({\n        message: 'Evenement Saved'\n      }));\n      return dispatch({\n        type: SAVE_EVENT,\n        data: data\n      });\n    });\n  };\n}\nexport function newProduct2(user, product) {\n  var request = axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"/salles/department/\").concat(product.data.department));\n  console.log('PARAMS: ', user);\n  console.log('PARAMS: ', product);\n  return function (dispatch) {\n    return request.then(function (response) {\n      var data = {\n        id: FuseUtils.generateGUID(),\n        salles: response.data\n      };\n      return dispatch({\n        type: GET_SALLE,\n        payload: data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\hp folio\\Documents\\ProjetLibre\\Front\\gestion-salle-front\\src\\app\\main\\evenementUser\\store\\actions\\evenementsUserFields.actions.js"],"names":["axios","FuseUtils","showMessage","useSelector","GET_SALLE","SAVE_PRODUCT","SAVE_EVENT","getProduct2","params","console","log","request","get","process","env","REACT_APP_API_URL","userId","dispatch","then","response","data","id","_id","type","payload","saveCategory2","user","start","startdate","starttime","end","enddate","endtime","post","name","salle","uuid","message","newProduct2","product","department","generateGUID","salles"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {FuseUtils} from '@fuse';\nimport {showMessage} from 'app/store/actions/fuse';\nimport {useSelector} from \"react-redux\";\n\nexport const GET_SALLE = '[E-COMMERCE APP] GET_SALLE';\nexport const SAVE_PRODUCT = '[E-COMMERCE APP] SAVE PRODUCT';\nexport const SAVE_EVENT = '[E-COMMERCE APP] SAVE_EVENT';\n\n\nexport function getProduct2(params)\n{\n    console.log('GET PRODUCT PARAMS: ', params);\n    const request = axios.get(`${process.env.REACT_APP_API_URL}/user/${params.userId}/category`);\n\n    return (dispatch) =>\n        request.then((response) => {\n\n                const data = {\n                    id              : response.data._id,\n                    response: ''\n                };\n                return dispatch({\n                    type   : GET_SALLE,\n                    payload: data\n                })\n            }\n        );\n}\n\nexport function saveCategory2(data, user)\n{\n    console.log('SAVE CATEGORY DATA: ',data);\n\n    console.log('SAVE PRODUCT DATA USER: ', user);\n\n    const start = data.startdate + 'T' + data.starttime + 'Z';\n    const end = data.enddate + 'T' + data.endtime + 'Z';\n    console.log('START: ', start);\n    console.log('END: ', end);\n    //const request = axios.post('/api/create-ticket-app/ticket/save', data);\n    const request = axios.post(`${process.env.REACT_APP_API_URL}/evenements/evenement/new`, {\n        name: data.name,\n        start: start,\n        end: end,\n        salle: {\n            id: data.salle\n        },\n        user: {\n            id: user.uuid\n        }\n    });\n  /*\n    const request = axios.post(`${process.env.REACT_APP_API_URL}/salles/salle/new`\n      ,{\n      name: data.name,\n      positions: data.positions,\n      computers: data.computers,\n      board: data.board,\n      conditioning: data.conditioning,\n      speakers: data.speakers,\n      projector: data.projector,\n      network : data.network,\n      department: {\n          id: data.department\n      }\n      });\n*/\n    return (dispatch) =>\n        request.then((response) => {\n\n                dispatch(showMessage({message: 'Evenement Saved'}));\n\n                return dispatch({\n                    type   : SAVE_EVENT,\n                    data: data\n                })\n          }\n        );\n\n}\n\nexport function newProduct2(user, product)\n{\n\n    const request = axios.get(`${process.env.REACT_APP_API_URL}/salles/department/${product.data.department}`);\n    console.log('PARAMS: ', user);\n    console.log('PARAMS: ', product);\n\n     return (dispatch) =>\n        request.then((response) => {\n\n            const data = {\n                id              : FuseUtils.generateGUID(),\n                salles     : response.data\n\n            };\n            return dispatch({\n                type   : GET_SALLE,\n                payload: data\n            })\n           }\n       );\n\n}\n"]},"metadata":{},"sourceType":"module"}