{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp folio\\\\Documents\\\\ProjetLibre\\\\Front\\\\gestion-salle-front\\\\src\\\\app\\\\main\\\\register\\\\tabs\\\\FirebaseRegisterTab.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Formsy from 'formsy-react';\nimport { TextFieldFormsy } from '@fuse';\nimport { Button, InputAdornment, Icon } from '@material-ui/core';\nimport * as authActions from 'app/auth/store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction FirebaseRegisterTab(props) {\n  var dispatch = useDispatch();\n  var register = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return auth.register;\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFormValid = _useState2[0],\n      setIsFormValid = _useState2[1];\n\n  var formRef = useRef(null);\n  useEffect(function () {\n    if (register.error && (register.error.username || register.error.password || register.error.email)) {\n      formRef.current.updateInputsWithError(_objectSpread({}, register.error));\n      disableButton();\n    }\n  }, [register]);\n\n  function disableButton() {\n    setIsFormValid(false);\n  }\n\n  function enableButton() {\n    setIsFormValid(true);\n  }\n\n  function handleSubmit(model) {\n    dispatch(authActions.registerWithFirebase(model));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Formsy, {\n    onValidSubmit: handleSubmit,\n    onValid: enableButton,\n    onInvalid: disableButton,\n    ref: formRef,\n    className: \"flex flex-col justify-center w-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"text\",\n    name: \"displayName\",\n    label: \"Display name\",\n    validations: {\n      minLength: 4\n    },\n    validationErrors: {\n      minLength: 'Min character length is 4'\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"person\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"text\",\n    name: \"email\",\n    label: \"Email\",\n    validations: \"isEmail\",\n    validationErrors: {\n      isEmail: 'Please enter a valid email'\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"email\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    validations: \"equalsField:password-confirm\",\n    validationErrors: {\n      equalsField: 'Passwords do not match'\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"vpn_key\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(TextFieldFormsy, {\n    className: \"mb-16\",\n    type: \"password\",\n    name: \"password-confirm\",\n    label: \"Confirm Password\",\n    validations: \"equalsField:password\",\n    validationErrors: {\n      equalsField: 'Passwords do not match'\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"text-20\",\n        color: \"action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"vpn_key\"))\n    },\n    variant: \"outlined\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"w-full mx-auto mt-16 normal-case\",\n    \"aria-label\": \"REGISTER WITH FIREBASE\",\n    disabled: !isFormValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Register with Firebase\")));\n}\n\nexport default FirebaseRegisterTab;","map":{"version":3,"sources":["C:\\Users\\hp folio\\Documents\\ProjetLibre\\Front\\gestion-salle-front\\src\\app\\main\\register\\tabs\\FirebaseRegisterTab.js"],"names":["React","useEffect","useRef","useState","Formsy","TextFieldFormsy","Button","InputAdornment","Icon","authActions","useDispatch","useSelector","FirebaseRegisterTab","props","dispatch","register","auth","isFormValid","setIsFormValid","formRef","error","username","password","email","current","updateInputsWithError","disableButton","enableButton","handleSubmit","model","registerWithFirebase","minLength","endAdornment","isEmail","equalsField"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport Formsy from 'formsy-react';\nimport {TextFieldFormsy} from '@fuse';\nimport {Button, InputAdornment, Icon} from '@material-ui/core';\nimport * as authActions from 'app/auth/store/actions';\nimport {useDispatch, useSelector} from 'react-redux';\n\nfunction FirebaseRegisterTab(props)\n{\n    const dispatch = useDispatch();\n    const register = useSelector(({auth}) => auth.register);\n\n    const [isFormValid, setIsFormValid] = useState(false);\n    const formRef = useRef(null);\n\n    useEffect(() => {\n        if ( register.error && (register.error.username || register.error.password || register.error.email) )\n        {\n            formRef.current.updateInputsWithError({\n                ...register.error\n            });\n            disableButton();\n        }\n    }, [register]);\n\n    function disableButton()\n    {\n        setIsFormValid(false);\n    }\n\n    function enableButton()\n    {\n        setIsFormValid(true);\n    }\n\n    function handleSubmit(model)\n    {\n        dispatch(authActions.registerWithFirebase(model));\n    }\n\n    return (\n        <div className=\"w-full\">\n            <Formsy\n                onValidSubmit={handleSubmit}\n                onValid={enableButton}\n                onInvalid={disableButton}\n                ref={formRef}\n                className=\"flex flex-col justify-center w-full\"\n            >\n                <TextFieldFormsy\n                    className=\"mb-16\"\n                    type=\"text\"\n                    name=\"displayName\"\n                    label=\"Display name\"\n                    validations={{\n                        minLength: 4\n                    }}\n                    validationErrors={{\n                        minLength: 'Min character length is 4'\n                    }}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">person</Icon></InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                    required\n                />\n\n                <TextFieldFormsy\n                    className=\"mb-16\"\n                    type=\"text\"\n                    name=\"email\"\n                    label=\"Email\"\n                    validations=\"isEmail\"\n                    validationErrors={{\n                        isEmail: 'Please enter a valid email'\n                    }}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">email</Icon></InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                    required\n                />\n\n                <TextFieldFormsy\n                    className=\"mb-16\"\n                    type=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    validations=\"equalsField:password-confirm\"\n                    validationErrors={{\n                        equalsField: 'Passwords do not match'\n                    }}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">vpn_key</Icon></InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                    required\n                />\n\n                <TextFieldFormsy\n                    className=\"mb-16\"\n                    type=\"password\"\n                    name=\"password-confirm\"\n                    label=\"Confirm Password\"\n                    validations=\"equalsField:password\"\n                    validationErrors={{\n                        equalsField: 'Passwords do not match'\n                    }}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\"><Icon className=\"text-20\" color=\"action\">vpn_key</Icon></InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                    required\n                />\n\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"w-full mx-auto mt-16 normal-case\"\n                    aria-label=\"REGISTER WITH FIREBASE\"\n                    disabled={!isFormValid}\n                >\n                    Register with Firebase\n                </Button>\n            </Formsy>\n        </div>\n    );\n}\n\nexport default FirebaseRegisterTab;\n"]},"metadata":{},"sourceType":"module"}